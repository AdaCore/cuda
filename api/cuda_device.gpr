--  Uncomment these if its decided to include the CUDA headers in the runtime:

--  with "runtime_build";
--  with "target_options";

project CUDA_Device is

   --  ??? It's not clear yet how to generate bindings to the device side
   --  as they are very C++ specific. work on the host generated files
   --  for now to ensure at least compilation OK.
   for Source_Dirs use ("device_static");

   for Object_Dir use "obj";

   --  Uncomment this line if its decided to include the CUDA headers in the
   --  runtime:

   --  package Compiler renames Target_Options.Compiler;

   --  Remove these lines if its decided to include the CUDA headers in the
   --  runtime:

   for Target use "cuda";

   type Cubin_Version_Option is ("sm_53", "sm_61", "sm_75");
   Cubin_Version : Cubin_Version_Option := external ("cubin_version", "sm_75");

   package Compiler is
      for Switches ("ada") use ("-gnatX", "-O2", "-gnatn", "-mcpu=" & Cubin_Version);
   end Compiler;

   type Host_Target_Option is ("x86_64-linux", "aarch64-linux");
   Host_Target : Host_Target_Option := external ("host_target", "x86_64-linux");

   for Archive_Builder use ("cuda-gcc", "-host-target=" & Host_Target, "-mcpu=" & Cubin_Version);

end CUDA_Device;
